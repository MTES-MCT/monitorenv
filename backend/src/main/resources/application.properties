server.port=${monitorenv.server.port}
server.forward-headers-strategy=framework
host.ip=${host.ip}
monitorenv.ajp.port=${monitorenv.ajp.port}
spring.jmx.enabled=true
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=file:${STATIC_FILES_PATH}
spring.flyway.locations=${monitorenv.flyway.locations}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.datasource.url=${env.db.url}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maxLifetime=60000
# Whether response compression is enabled.
server.compression.enabled=true
# List of user-agents to exclude from compression.
server.compression.excluded-user-agents=
# Comma-separated list of MIME types that should be compressed. Default mime-types are: text/html, text/xml, text/plain, text/css
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size=2048
management.endpoint.health.show-details=always
management.endpoint.metrics.enable=false
management.endpoints.web.exposure.include=*

monitorenv.version=${VERSION}

# Sentry
monitorenv.sentry.enabled=${monitorenv.sentry.enabled}
monitorenv.sentry.environment=${monitorenv.sentry.environment}
monitorenv.sentry.dsn=${SENTRY_DSN}

# Monitorfish
monitorfish.url=${monitorfish.url}
monitorfish.xApiKey=${monitorfish.api.key}
rapportnav.url=${rapportnav.url}
rapportnav.timeout=3000

# Restricted APIs
monitorenv.api.protected.paths=${monitorenv.api.protected.paths}
monitorenv.api.protected.super-user-paths=${monitorenv.api.protected.super-user-paths}
monitorenv.api.protected.public-paths=${monitorenv.api.protected.public-paths}
monitorenv.api.protected.api-key=${monitorenv.api.protected.api-key}

# OIDC Ressource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${monitorenv.oidc.issuer-uri}
monitorenv.oidc.enabled=${monitorenv.oidc.enabled}
monitorenv.oidc.issuer-uri=${monitorenv.oidc.issuer-uri}
monitorenv.oidc.userinfo-endpoint=${monitorenv.oidc.userinfo-endpoint}
