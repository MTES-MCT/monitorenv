version: '3'
services:
  app:
    container_name: monitorenv_backend
    image: ghcr.io/mtes-mct/monitorenv/monitorenv-app:$MONITORENV_VERSION
    user: "monitorenv:${MONITORENV_LOGS_AND_BACKUPS_GID}"
    environment:
      - ENV_DB_URL=jdbc:postgresql://db:5432/$POSTGRES_DB?user=$POSTGRES_USER&password=$POSTGRES_PASSWORD
      - REACT_APP_GEOSERVER_REMOTE_URL=${REACT_APP_GEOSERVER_REMOTE_URL}
      - REACT_APP_GEOSERVER_NAMESPACE=${REACT_APP_GEOSERVER_NAMESPACE}
      - REACT_APP_MAPBOX_KEY=${REACT_APP_MAPBOX_KEY}
      - REACT_APP_SHOM_KEY=${REACT_APP_SHOM_KEY}
      - SPRING_PROFILES_ACTIVE=prod
      - HOST_IP=127.0.0.1
    volumes:
      - "${MONITORENV_LOGS_FOLDER_BACKEND}:/home/monitorenv/logs"
    networks:
      - monitorenv_network
    depends_on:
      - db
      - geoserver
      - reverse-proxy
    healthcheck:
      test: curl --fail -s http://localhost/index.html || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"
    labels:
      - traefik.enable=true
      - monitor=monitorenv
      - traefik.http.routers.app.rule=PathPrefix(`/`)
      - traefik.http.routers.app.priority=100
      - traefik.http.routers.app.entrypoints=web
      - traefik.http.services.app.loadbalancer.server.port=8880

  db:
    user: ":${MONITORENV_LOGS_AND_BACKUPS_GID}"
    volumes:
      - "${MONITORENV_BACKUPS_FOLDER}:/opt/monitorenv_backups"
    restart: always

  geoserver:
    restart: always
    healthcheck:
      test: curl --fail -s http://localhost:8080/geoserver/index.html || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
  monitorenv_network:


volumes:
  geoserver-data:
    driver: local
