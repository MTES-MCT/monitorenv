services:
  app:
    image: ghcr.io/mtes-mct/monitorenv/monitorenv-app:$MONITORENV_VERSION
    container_name: monitorenv_backend
    user: "monitorenv:${MONITORENV_LOGS_AND_BACKUPS_GID}"
    environment:
      - ENV_DB_URL=jdbc:postgresql://db:5432/$POSTGRES_DB?user=$POSTGRES_USER&password=$POSTGRES_PASSWORD
      - FRONTEND_GEOSERVER_NAMESPACE=${FRONTEND_GEOSERVER_NAMESPACE}
      - FRONTEND_GEOSERVER_REMOTE_URL=${FRONTEND_GEOSERVER_REMOTE_URL}
      - FRONTEND_GOOGLEMAPS_API_KEY=${FRONTEND_GOOGLEMAPS_API_KEY}
      - FRONTEND_MAPBOX_KEY=${FRONTEND_MAPBOX_KEY}
      - FRONTEND_MONITORENV_VERSION=${MONITORENV_VERSION}
      - FRONTEND_SENTRY_DSN=${SENTRY_DSN}
      - FRONTEND_SENTRY_ENV=${ENVIRONMENT}
      - FRONTEND_SENTRY_TRACING_ORIGIN=${FRONTEND_SENTRY_TRACING_ORIGIN}
      - FRONTEND_SHOM_KEY=${FRONTEND_SHOM_KEY}
      - FRONTEND_MISSION_FORM_AUTO_UPDATE=${FRONTEND_MISSION_FORM_AUTO_UPDATE}
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=${FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED}
      - FRONTEND_REPORTING_FORM_AUTO_SAVE_ENABLED=${FRONTEND_REPORTING_FORM_AUTO_SAVE_ENABLED}
      - FRONTEND_REPORTING_FORM_AUTO_UPDATE=${FRONTEND_REPORTING_FORM_AUTO_UPDATE}
      - FRONTEND_OIDC_AUTHORITY=$MONITORENV_OIDC_AUTHORITY
      - FRONTEND_OIDC_CLIENT_ID=$MONITORENV_OIDC_CLIENT
      - FRONTEND_OIDC_ENABLED=$MONITORENV_OIDC_ENABLED
      - FRONTEND_OIDC_REDIRECT_URI=$MONITORENV_OIDC_REDIRECT_URI
      - MONITORENV_OIDC_CACHE_IN_MINUTES=${MONITORENV_OIDC_CACHE_IN_MINUTES}
      - MONITORENV_OIDC_ENABLED=$MONITORENV_OIDC_ENABLED
      - MONITORENV_OIDC_ISSUER_URI=$MONITORENV_OIDC_AUTHORITY
      - MONITORENV_URL=${MONITORENV_URL}
      - MONITORFISH_API_KEY=${MONITORFISH_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT}
      - HOST_IP=127.0.0.1
    ports:
      - ${BACKEND_HTTP_PORT}:8880
      - 8000:8000
      - 5000:5000
      - 5001:5001
    volumes:
      - "${MONITORENV_LOGS_FOLDER}:/home/monitorenv/logs"
    networks:
      - backend_network
    depends_on:
      - db
      - geoserver
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  db:
    container_name: monitorenv_database
    user: ":${MONITORENV_LOGS_AND_BACKUPS_GID}"
    volumes:
      - "${MONITORENV_BACKUPS_FOLDER}:/opt/monitorenv_backups"
    ports:
      - 5432:5432
    networks:
      - backend_network
    restart: always

  geoserver:
    container_name: monitorenv_geoserver
    restart: always
    environment:
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
    ports:
      - ${GEOSERVER_PORT}:8080
    networks:
      - backend_network
    healthcheck:
      test: curl --fail -s http://localhost:8080/geoserver/index.html || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
  backend_network:

volumes:
  geoserver-data:
    driver: local
