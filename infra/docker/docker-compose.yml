version: '3'
services:
  reverse-proxy:
    image: traefik:v2.8
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:${PORT_API}"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`monitor`,`monitorenv`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitorenv_network

  db:
    image: timescale/timescaledb-postgis:1.7.4-pg11
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - monitorenv_network

  geoserver:
    container_name: monitorenv_geoserver
    image: kartoza/geoserver:2.20.2
    environment:
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
      - geoserver-settings:/settings
    networks:
      - monitorenv_network
    labels:
      - traefik.enable=true
      - monitor=monitorenv
      - traefik.http.services.geoserver.loadbalancer.server.port=8080
      - traefik.http.routers.geoserver.rule=PathPrefix(`/geoserver`)
      - traefik.http.routers.geoserver.priority=200

volumes:
  db-data:
    driver: local

  geoserver-data:
    driver: local
  geoserver-settings:
    driver: local
