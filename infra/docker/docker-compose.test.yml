services:
  db:
    image: ghcr.io/mtes-mct/monitorenv/monitorenv-database:pg11-ts1.7.4-postgis3.3.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=monitorenvdb
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 30

  flyway:
    image: flyway/flyway
    command: migrate -password=postgres -schemas=public -user=postgres -url=jdbc:postgresql://db:5432/monitorenvdb
    volumes:
      - ../../backend/src/main/resources/db/:/flyway/sql
    depends_on:
      db:
        condition: service_healthy

  app:
    image: monitorenv-app:$MONITORENV_VERSION
    container_name: monitorenv_backend
    environment:
      - ENV_DB_URL=jdbc:postgresql://db:5432/monitorenvdb?user=postgres&password=postgres
      - SPRING_PROFILES_ACTIVE=test
      - HOST_IP=127.0.0.1
      - FRONTEND_GEOSERVER_NAMESPACE=monitorenv
      - FRONTEND_GEOSERVER_REMOTE_URL=http://0.0.0.0:8081
      - FRONTEND_MISSION_FORM_AUTO_SAVE_ENABLED=true
      - FRONTEND_REPORTING_FORM_AUTO_SAVE_ENABLED=true
      - FRONTEND_REPORTING_FORM_AUTO_UPDATE=true
      - FRONTEND_MISSION_FORM_AUTO_UPDATE=true
      - FRONTEND_VIGILANCE_AREA_ENABLED=true
      - FRONTEND_MONITORENV_VERSION=${MONITORENV_VERSION}
      - FRONTEND_GOOGLEMAPS_API_KEY=${FRONTEND_GOOGLEMAPS_API_KEY}
      - FRONTEND_MAPBOX_KEY=${FRONTEND_MAPBOX_KEY}
      - FRONTEND_SENTRY_DSN=
      - FRONTEND_SENTRY_ENV=
      - FRONTEND_SHOM_KEY=${FRONTEND_SHOM_KEY}
      - FRONTEND_SENTRY_TRACING_ORIGIN=
      - FRONTEND_OIDC_AUTHORITY=http://localhost:8085/realms/monitor/
      - FRONTEND_OIDC_CLIENT_ID=monitorenv
      - FRONTEND_OIDC_ENABLED=false
      - FRONTEND_OIDC_REDIRECT_URI=http://localhost:3000/login
      - MONITORENV_OIDC_ENABLED=false
      - MONITORENV_OIDC_ISSUER_URI=http://localhost:8085/realms/monitor/
      - MONITORFISH_API_KEY=${MONITORFISH_API_KEY}
    ports:
      - 8880:8880
      - 8000:8000
      - 5000:5000
      - 5001:5001
    depends_on:
      - db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1024m"

  geoserver:
    image: rodolpheche/wiremock
    ports:
      - 8081:8080
    volumes:
      - ../../frontend/cypress/mappings/geoserver:/home/wiremock/mappings
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:8080/geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=monitorfish:regulations&outputFormat=application/json&CQL_FILTER=topic=%27Ouest%20Cotentin%20Bivalves%27%20AND%20zone=%27Praires%20Ouest%20cotentin%27 || exit 1 ",
        ]
      interval: 1s
      timeout: 1s
      retries: 30

  monitorfish:
    image: rodolpheche/wiremock
    ports:
      - 8082:8080
    volumes:
      - ../../frontend/cypress/mappings/monitorfish:/home/wiremock/mappings
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/api/v1/mission_actions?missionId=34 || exit 1 "]
      interval: 1s
      timeout: 1s
      retries: 30

  rapportnav:
    image: rodolpheche/wiremock
    ports:
      - 8083:8080
    volumes:
      - ../../frontend/cypress/mappings/rapportnav:/home/wiremock/mappings
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/api/v1/missions/34 || exit 1 "]
      interval: 1s
      timeout: 1s
      retries: 30
volumes:
  db-data:
    driver: local
